import sys
import io
import json
import ollama

sys.stdout = io.TextIOWrapper(sys.stdout.buffer, encoding='utf-8')

def generar_respuesta(mensaje):
    try:
        vuelos = json.loads(mensaje)
    except json.JSONDecodeError as e:
        print("Error: el mensaje no es un JSON v√°lido.")
        print("Detalles:", e)
        return

    cantidad = len(vuelos)
    vuelos_texto = json.dumps(vuelos, ensure_ascii=False, indent=2)

    prompt = f"""
Recibiste una cotizaci√≥n con {cantidad} vuelo(s) en formato JSON. Tu tarea es generar un mensaje c√°lido y profesional para enviar por WhatsApp a un cliente interesado en viajar.

‚úàÔ∏è Datos de los vuelos:
{vuelos_texto}

---

üéØ Instrucciones:
- Si hay **1 solo vuelo**, mostralo con este formato (reemplazando los valores entre llaves):
---
Cotizaci√≥n a√©rea a {{ciudadDestinoIda}}.

‚úàÔ∏è A√©reo de {{aerolinea}} con equipaje de mano de 10kg + bolso de mano.

Horarios:
ida:
{{aeropuertoIda}} {{horarioSalidaIda}}
Llegada: {{aeropuertoDestinoIda}} {{horarioSupongoLlegadaIda}} (Duraci√≥n: {{horarioSupongoDuracionIda}})
{{escalasIda}}
vuelta:
{{aeropuertoVuelta}} {{horarioSalidaVuelta}}
Llegada: {{aeropuertoDestinoVuelta}} {{horarioSupongoLlegadaVuelta}} (Duraci√≥n: {{horarioSupongoDuracionVuelta}})
{{escalasVuelta}}

üí∞ Precio final: {{precioFinal}} USD
---

- Si hay **2 o m√°s vuelos**, mostralos con ese mismo formato uno por uno, y al final hac√© una breve comparaci√≥n (precio, escalas u horarios).
- No inventes vuelos. Us√° **solo** los datos recibidos.
- No repitas el destino si es el mismo en todos.
- No devuelvas el JSON. Solo el mensaje final para el cliente.
- Us√° emojis si quer√©s, con tono humano, claro y c√°lido.

üìå Devolv√© solo el texto para el cliente, sin c√≥digo ni estructuras t√©cnicas.
"""

    response = ollama.chat(
        model="llama3.2",
        messages=[{"role": "user", "content": prompt}],
        options={"temperature": 0}
    )

    print(response["message"]["content"])


if __name__ == "__main__":
    try:
        mensaje = sys.stdin.read()
        generar_respuesta(mensaje)
    except Exception as e:
        print("Error al leer stdin o generar respuesta:", e)
        sys.exit(1)